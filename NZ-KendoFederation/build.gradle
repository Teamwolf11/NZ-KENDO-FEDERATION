apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'application'


mainClassName = 'NZ.KendoFederation.Server'

repositories {
    jcenter()
}

dependencies {
    testImplementation     'junit:junit:4.13'
    //jdbc 'org.postgresql:postgresql:42.2.0'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation 'org.postgresql:postgresql:42.2.23'
    def junitVer = '5.6.2'
   testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVer
   testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVer
   testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
}

test {
   useJUnitPlatform()
}

run {
   standardInput = System.in
}


task createMissingSourceDirs {
   group = "Source Directories"
   description = "Create all of the missing source directories for this project."
   doFirst {
      sourceSets.each { def sourceRoot ->
         sourceRoot.allSource.srcDirTrees.each { def sourceDir ->
            if(!sourceDir.dir.exists()) {
               println "Creating ${sourceDir}"
               mkdir sourceDir.dir
            }
         }
      }
   }
}
 
task deleteEmptySourceDirs {
   group = "Source Directories"
   description = "Delete all empty source directories."
   doFirst {
      sourceSets.each { def sourceRoot ->
         sourceRoot.allSource.srcDirTrees.each { def sourceDir ->
            if(sourceDir.dir.exists() && sourceDir.dir.isDirectory() && sourceDir.dir.list().length == 0) {
               println "Removing empty ${sourceDir}"
               sourceDir.dir.delete()
            }
         }
      }
   }
}


sourceSets {
    web {
        resources {
            srcDirs = ['public']
        }
        java { 
            srcDirs = []
        }
    }
}
